{"ast":null,"code":"import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { thunk } from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { getProductDetailsReducer, getProductReducer } from './reducers/productReducer';\nconst reducer = combineReducers({\n  //cart: cartReducer,\n  getProducts: getProductReducer\n  //getProductDetails: getProductDetailsReducer\n});\nconst middleware = [thunk];\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"names":["createStore","applyMiddleware","combineReducers","thunk","composeWithDevTools","getProductDetailsReducer","getProductReducer","reducer","getProducts","middleware","store"],"sources":["E:/Coding ninjas/Full Stack Web Development/CollabProjects/FlipkartClone/client/src/components/redux/store.js"],"sourcesContent":["import { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport {thunk} from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { getProductDetailsReducer, getProductReducer } from './reducers/productReducer';\r\n\r\n\r\nconst reducer = combineReducers({\r\n    //cart: cartReducer,\r\n    getProducts: getProductReducer,\r\n    //getProductDetails: getProductDetailsReducer\r\n})\r\n\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    reducer, \r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,eAAe,EAAEC,eAAe,QAAQ,OAAO;AACrE,SAAQC,KAAK,QAAO,aAAa;AACjC,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,wBAAwB,EAAEC,iBAAiB,QAAQ,2BAA2B;AAGvF,MAAMC,OAAO,GAAGL,eAAe,CAAC;EAC5B;EACAM,WAAW,EAAEF;EACb;AACJ,CAAC,CAAC;AAGF,MAAMG,UAAU,GAAG,CAACN,KAAK,CAAC;AAE1B,MAAMO,KAAK,GAAGV,WAAW,CACrBO,OAAO,EACPH,mBAAmB,CAACH,eAAe,CAAC,GAAGQ,UAAU,CAAC,CACtD,CAAC;AAED,eAAeC,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}